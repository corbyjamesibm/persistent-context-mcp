apiVersion: v1
kind: Service
metadata:
  name: context-store-service
  namespace: context-store
  labels:
    app: persistent-context-store
    component: app
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: persistent-context-store
    component: app
  sessionAffinity: None

---
apiVersion: v1
kind: Service
metadata:
  name: neo4j-service
  namespace: context-store
  labels:
    app: neo4j
    component: database
spec:
  type: ClusterIP
  ports:
  - port: 7687
    targetPort: 7687
    protocol: TCP
    name: bolt
  - port: 7474
    targetPort: 7474
    protocol: TCP
    name: http
  selector:
    app: neo4j
    component: database

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: context-store
  labels:
    app: redis
    component: cache
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
    component: cache

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: context-store
  labels:
    app: nginx
    component: proxy
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: nginx
    component: proxy
  loadBalancerSourceRanges:
  - 0.0.0.0/0

---
# Headless service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: neo4j-headless
  namespace: context-store
  labels:
    app: neo4j
    component: database
spec:
  clusterIP: None
  ports:
  - port: 7687
    targetPort: 7687
    protocol: TCP
    name: bolt
  - port: 7474
    targetPort: 7474
    protocol: TCP
    name: http
  selector:
    app: neo4j
    component: database

---
# Service for monitoring
apiVersion: v1
kind: Service
metadata:
  name: context-store-metrics
  namespace: context-store
  labels:
    app: persistent-context-store
    component: metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "3000"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: metrics
  selector:
    app: persistent-context-store
    component: app